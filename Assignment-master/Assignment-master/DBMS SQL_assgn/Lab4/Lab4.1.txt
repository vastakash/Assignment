4.1: Database Objects
 


 
1.Create the Customer table with the following columns. 
	CustomerId	Number(5)
	Cust_Name	varchar2(20)
	Address1	Varchar2(30)
	Address2 	Varchar2(30)
	
 ==>create table customer
(customerid number(5),cust_name varchar2(20),Address1 varchar2(30),Address2 varchar2(30));


 
2.Modify the Customer table Cust_Name column of datatype with Varchar2(30), rename the column to CustomerName and it should not accept Nulls.

==>Alter table customer rename column cust_name to customername;
==>Alter table customer modify customername  varchar2(30) Not Null;


 
3.a) Add the following Columns to the Customer table. 
	Gender	Varchar2(1)
	Age Number(3)
	PhoneNo	Number(10)

==>Alter table customer add Gender varchar2(1);
==>Alter table customer add Age Number(3);
==>Alter table customer add phoneNo(10);

b) Rename the Customer table to Cust_Table

==>Rename customer to cust_table;


 
4.Insert rows with the following data in to the Customer table.
Insert into customer values: (1000, ‘Allen’, ‘#115 Chicago’, ‘#115 Chicago’, ‘M’, ‘25,
7878776’)
In similar manner, add the below records to the Customer table:
1001, George, #116 France, #116 France, M, 25, 434524
1002, Becker, #114 New York, #114 New York, M, 45, 431525

==>insert into cust_table(&Customerid,'&cust_Name','&Address1','&Address2','&Gender',&Age,&phoneNo);
==>1000, ‘Allen’, ‘#115 Chicago’, ‘#115 Chicago’, ‘M’, ‘25, 7878776’
==>1001, George, #116 France, #116 France, M, 25, 434524
==>1002, Becker, #114 New York, #114 New York, M, 45, 431525


 
5.Add the Primary key constraint for Customerld with the name Custld_Prim. 
 
==>Alter table cust_table add constraints Custid_prim PRIMARY KEY (customerid);


 
6.Insert the row given below in the Customer table and see the message generated by the Oracle server. 
	1002, John, #114 Chicago, #114 Chicago, M, 45, 439525
 
==>
 
7.Disable the constraint on CustomerId, and insert the 	following data:
                 1002, Becker, #114 New York, #114 New york , M, 45, 431525
	1003, Nanapatekar, #115 India, #115 India , M, 45, 431525
 
==>Alter table cust_table drop PRIMARY KEY custid_prim;
 


8.Enable the constraint on CustomerId of the Customer table, and see the message generated by the Oracle server. 
 
==>Alter table cust_table add constraints Custid_prim PRIMARY KEY (customerid);

 
9.Drop the constraint Custld_Prim on CustomerId and insert the following Data. Alter Customer table, drop constraint Custid_Prim.
                 1002, Becker, #114 New York, #114 New york , M, 45, 431525, 15000.50
	1003, Nanapatekar, #115 India, #115 India , M, 45, 431525, 20000.50	
 
==>Alter table cust_table drop PRIMARY KEY custid_prim;
==>Insert into cust_table(1002, Becker, #114 New York, #114 New york , M, 45,431525, 15000.50);
==>Insert into cust_table(1003, Nanapatekar, #115 India, #115 India , M, 45, 431525,20000.50);


 
10.Delete all the existing rows from Customer table, and let the structure remain itself using TRUNCATE statement. 

==>TRUNCATE table cust_table;
 

 
11.In the Customer table, add a column E_mail. 

==>Alter table add e_mail varchar2(30);

 
 
12.Drop the E_mail column from Customer table. 

==>Alter table cust_table DROP e_mail;


 
13.Create the Suppliers table based on the structure of the Customer table. Include only the CustomerId, CustomerName, Address1, Address2, and phoneno columns. Name the columns in the new table as SuppID, SName, Addr1, Addr2, and Contactno respectively. 

==>create table Suppliers as select(customerid as suppid,customername as sname,adddress1 as addr1,address2 as addr2,phoneno as contactno) from cust_table;


 
14.Drop the above table and recreate the following table with the name CustomerMaster. 
	Customerid	Number(5) Primary key(Name of constraint is CustId_PK)
	CustomerName	Varchar2(30) Not Null
	Addressl	Varchar2(30) Not Null
	Address2	Varchar2(30)
	Gender		Varchar2(l)
	Age		Number(3)
	PhoneNo	Number(10)

==>Drop table Suppliers;
==>create table customermaster(customerid(10) primary key(custid_pk),customername varchar2(30),Address1 varchar2(30),Address2 varchar2(30),Gender varchar2(1),Age number(3),phoneno number(10));


 
15.Create the AccountsMaster table with the following Columns. Use sequence to generate Account number Customerid Number(5)
	AccountNumber Number(10,2) Primary key(Name of constraint is Acc_PK)
	AccountType Char(3)
	LedgerBalance Number(10,2) Not Null

==>Create table Accoutnmaster(customerid number(5),Accountnumber number(10) primary key(acno),accounttype char(3),ledgerbalance number(10) Not Null);
==>Create sequence seq_ano
     MINVALUE 101
     MAXVALUE 10000
     START WITH 101
     INCREMENT BY 1
     CACHE 101;


 
16.Relate AccountsMaster table and CustomerMaster table through Customerld column with the constraint name Cust_acc.

==>Alter table Accountmaster ADD constraint ass_fk FOREIGN KEY(customerid) REFERENCES customermaster(customerid);


 
17.Insert the following rows to the CustomerMaster table:
1000, Allen, #115 Chicago, #115 Chicago, M, 25, 7878776
1001, George, #116 France, #116 France, M, 25, 434524
1002, Becker, #114 New York, #114 New York, M, 45, 431525

==>Insert into customermaster values(1000, Allen, #115 Chicago, #115 Chicago, M, 25, 7878776);
==>Insert into customermaster values(1001, George, #116 France, #116 France, M, 25, 4345240;
==>Insert into customermaster values(1002, Becker, #114 New York, #114 New York, M, 45, 4315250;


 
18.Modify the AccountMaster table with the Check constraint to ensure AccountType should be either NRI or IND.

 ==>alter table Accountmaster add constraint ck_ac check(accountype='NRI' or accountype='IND');


 
19.Modify the AccountsMaster table keeping a Check constraint with the name Balance_Check for the Minimum Balance which should be greater than 5000. 

==>alter table Accountmaster add constraint Balance_check(ledger balance > 5000);


 
20.Modify the AccountsMaster table such that if Customer is deleted from Customer table then all his details should be deleted from AccountsMaster table. 

==>Delete from Accountmaster,customertable where customerid = 1001
 

 
21.Create Backup copy for the AccountsMaster table with the name ‘AccountDetails’. 
 
==>Create table accountdetails as select * from Accountmaster;


 
22.Create a view ‘Acc_view’ with columns Customerld, CustomerName, AccountNumber, AccountType, and LedgerBalance from AccountsMaster. In the view Acc_view, the column names should be CustomerCode, AccountHolderName, AccountNumber, Type, and Balance for the respective columns from AccountsMaster table. 
	
==>CREATE VIEW Acc_view AS SELECT(Customerid,Customername,Accountnumber,AccountType,ledgerBalance)
from AccountMaster;
 


23.Create a view on AccountsMaster table with name vAccs_Dtls. This view should list all customers whose AccountType is ‘IND’ and their balance amount should not be less than 10000. Using                   this view any DML operation should not violate the view conditions. 
	 
==>CREATE VIEW vAccs_Dtls AS SELECT Accounttype,ledgerbalance from Accountmaster where accounttype = 'IND' and ledgerbalance < 10000;
 


24.Create a view accsvw10 which will not allow DML statement against it.

==>


 
25.Create a Sequence with the name Seq_Dept on Deptno column of Department_Masters table. It should start from 40 and stop at 200. Increment parameter for the sequence Seq_Dept should be                  in step of 10.

==>CREATE sequence SEQ_DEPT minvalue 40 start with 40 increment by 10 MAX VALUE 200 cache 40;


 
26.Insert three sample rows by using the above sequence in Department_Masters table.

==>create table departmentmaster(deptno number(50),Dname varchar2(25),location varchar2(25));
==>insert into departmentmaster  values(seq_dept.NEXTVAL,'MARKETING','NEW DELHI');
==>insert into departmentmaster  values(seq_dept.NEXTVAL,'SALES','chennai');
==>insert into departmentmaster  values(seq_dept.NEXTVAL,'RESEARCH','BOSTON');


 
27.Drop the Seq_Dept sequence. 
 
==>DROP sequence seq_dept;


 
28.Get information on the index No_Name from the Data Dictionary. 

==>CREATE INDEX no_name on emp(empno);
==>select * from emp;



29.Create synonym synEmp for the EMP table. 

==>create SYNONYM synemp for emp;


 
30.Get Information on synonym synEmp from the Data Dictionary. 

==>select * from synemp;


 
31. Note: Perform this after creating the Employee Table mentioned in the next Lab assignment. Create Index on HireDate column and give the name as idx_emp_hiredate for this object.  

==>CREATE INDEX IDX_EMP_HIREDATE on emp(HIREDATE);
 

 
32. Create a Sequence with the name Seq_Emp on Empno column of Employee table. It should start from 1001. Try to set Minimum value for this sequence which is less than / greater than 1001, use the sequence to generate Empno while inserting records in Employee table and check the values generated. 
 
==>CREATE sequence SEQ_EMP minvalue 1001 start with 1001
increment by 1 cache 1001; 
 







